# views.py

from django.shortcuts import render
from django.db.models import F, Sum, Value
from django.db.models.functions import TruncMonth, Replace, Cast
from django.db.models import IntegerField
from collections import defaultdict
from .models import Expense
import datetime

def monthly_expenses(request, year):
    # Initialize a dictionary with all months set to 0
    monthly_expense_totals = defaultdict(lambda: 0)

    # Query to get total expenses grouped by month
    expenses = (
        Expense.objects
        .filter(date__year=year)
        .annotate(month=TruncMonth('date'))
        .annotate(
            quantity_clean=Replace(F('quantity'), Value(' '), Value('')),
            quantity_int=Cast('quantity_clean', IntegerField())
        )
        .values('month')
        .annotate(total_quantity=Sum('quantity_int'))
        .order_by('month')
    )

    # Populate the dictionary with the queried data
    for expense in expenses:
        month_str = expense['month'].strftime('%Y-%m')
        monthly_expense_totals[month_str] = expense['total_quantity']

    # Ensure all months from January to December are included
    for month in range(1, 13):
        month_str = f"{year}-{month:02d}"
        if month_str not in monthly_expense_totals:
            monthly_expense_totals[month_str] = 0

    # Convert the dictionary to a sorted list
    sorted_expenses = sorted(monthly_expense_totals.items())

    # Prepare data for the template
    context = {
        'year': year,
        'monthly_expenses': sorted_expenses
    }

    return render(request, 'monthly_expenses.html', context)